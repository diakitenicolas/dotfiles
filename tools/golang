#!/usr/bin/env bash

set -euo pipefail

clean() {
  rm -rf "${HOME}/usr/local/go"
  rm -rf "${HOME}/.dlv"
}

install() {


  local PROCESS_DATA_FILE_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/../PROCESS_DATA"
  local GO_VERSION=$( grep ^GO_VERSION_TO_INSTALL ${PROCESS_DATA_FILE_PATH} | cut -d '=' -f2) 

  local OS="$(uname -s | tr "[:upper:]" "[:lower:]")"
  local ARCH="amd64"

  if [[ ! -d ${HOME}/usr/local/go ]]; then
    local GO_ARCHIVE="go${GO_VERSION}.${OS}-${ARCH}.tar.gz"
    curl -q -sSL --max-time 300 -O "https://dl.google.com/go/${GO_ARCHIVE}"
    tar -C "${HOME}/usr/local" -xzf "${GO_ARCHIVE}"
    rm -rf "${GO_ARCHIVE}"  
  fi


  local CONF_FILENAME="${CURRENT_DIR}/conf/golang"
  source "${CONF_FILENAME}"
  mkdir -p "${GOPATH}"

  if command -v go > /dev/null 2>&1; then
    if [[ ${ARCH} = "amd64" ]]; then
      go get -u github.com/derekparker/delve/cmd/dlv
    fi

    go get -u github.com/kisielk/errcheck
    go get -u golang.org/x/lint/golint
    go get -u golang.org/x/tools/cmd/goimports
  fi

}
